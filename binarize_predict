dict_one_hot_cols = {}
dict_strategies = {}

for column in df.columns:
    if column != 'Target' and column in dict_strategies.keys():
        binarized = binarizer_predict(test_df, column)
        df = df.join(binarized)
        df.drop(column, axis=1, inplace=True)

def binarizer_predict(test_df, column_name):
    one_hot = pd.DataFrame()
    strategy = dict_strategies[column_name]
    list_of_cols = dict_one_hot_cols[column_name]
    if strategy=='threshold' or strategy=='range' or strategy=='category_numeric':
        converted = pd.to_numeric(test_df[column_name].copy(), downcast='float', errors='coerce')
        
        if strategy=='threshold':
            for col in list_of_cols:
                if '=nan' not in col:
                    parsed_value = float(col[col.find('=')+1:])
                    one_hot[col] = test_df[column_name]<=parsed_value
                else:
                    one_hot[col] = test_df[column_name].isna()

        elif strategy=='range':
            for col in list_of_cols:
                if '=nan' not in col:
                    lower_bound = float(col[col.find('(')+1:col.find(',')])
                    upper_bound = float(col[col.find(',')+2:-1]) 
                    one_hot[col] = (lower_bound<test_df['Age']) & (test_df['Age']<=upper_bound)
                else:
                    one_hot[col] = test_df[column_name].isna()

        else:
            for col in list_of_cols:
                if '=nan' not in col:
                    parsed_value = float(col[col.find('=')+1:])
                    one_hot[col] = test_df[column_name]==parsed_value
                else:
                    one_hot[col] = test_df[column_name].isna()
            
    elif strategy=='category':
        for col in list_of_cols:
            if '=nan' not in col:
                parsed_value = str(col[col.find('=')+1:])
                one_hot[col] = test_df[column_name]==parsed_value
            else:
                one_hot[col] = test_df[column_name].isna()

    return one_hot


                


